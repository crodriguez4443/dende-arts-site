---
pagination:
  data: products
  size: 1
  alias: product
  addAllPagesToCollections: true
permalink: "/{{ product.slug | slugify }}/"
layout: layout.njk

product_title: Abada Joggers 


---

<section class="main-grid product-sale-page">
    {% include "nav.njk" %}
    <div class="product-image-wrapper">
        <!-- Container for additional product photos -->
        <div class="additional-photos-container" id="thumbnailContainer">
            {% if product.images.length > 0 %}
                {% for image in product.images %}
                    {% if loop.index0 < 4 %}  {# Show first 4 images including featured image #}
                        <img src="{{ image.file.url }}" 
                            alt="{{ product.name }} - {% if loop.index0 === 0 %}Featured{% else %}Additional{% endif %} Image {{ loop.index }}"
                            class="thumbnail-image {% if loop.index0 === 0 %}active{% endif %}"
                            loading="lazy"
                            width="80"
                            height="80"
                            data-index="{{ loop.index0 }}"
                            onclick="swapImages(this)">
                    {% endif %}
                {% endfor %}
            {% endif %}
        </div>

        <!-- Primary image container -->
        <div class="left-half-img-container product-feature-image">
            {% if product.images and product.images[0] %}
                <img src="{{ product.images[0].file.url }}" 
                    alt="{{ product.name }}"
                    class="main-product-image"
                    id="mainImage"
                    data-index="0"
                    width="400"
                    height="400">
            {% endif %}
        </div>
    </div>

    <div class="right-half-content product-sale-content">
        {% block content %}
        <div class="product-card">
            {% if product %}
                <h1 class="product-page-title">{{ product.name }}</h1>
                <p class="product-subtext">{{ product.content.subtext }}</p>
                <div class="price">
                    Price: $ {{ product.price }} USD
                </div>

                {% if product.description %}
                    <div class="description">
                        {{ product.description | safe }}
                    </div>
                {% endif %}

                {% if product.name=='Abada Joggers' %}
                    <div class="features-container padding-bottom-1">
                        <div class="feature">
                            <div class="feature-image-container">
                                {% image "src/img/homepage/fabric-icon.svg", "4-way stretch material", "feature-icon", undefined, undefined, undefined, eager %}
                            </div>
                            <p>4-WAY STRETCH</p>
                        </div>
                        <div class="feature">
                            <div class="feature-image-container">
                                {% image "src/img/homepage/waistband.svg", "abadas with elastic waistband", "feature-icon", undefined, undefined, undefined, loading="eager"  %}
                            </div>
                            <p>Elastic Waistband</p>
                        </div>
                        <div class="feature">
                            <div class="feature-image-container">
                                {% image "src/img/homepage/taper.svg", "abadas with tapered fit", "feature-icon", undefined, undefined, undefined, loading="eager" %}
                            </div>
                            <p>Tapered Fit</p>
                        </div>
                        <div class="feature">
                            <div class="feature-image-container">
                                {% image "src/img/homepage/zipper.svg", "abadas with zipper pocket", "feature-icon", undefined, undefined, undefined, loading="eager" %}
                            </div>
                            <p>Zippered Pocket</p>
                        </div>
                    </div>
                {% endif %}
                
                <div class="flex-box padding-bottom-2 ">
                    {% if product.options %}
                        <div class="options">
                            {% for option in product.options %}
                                <div class="option-group">
                                    <label for="{{ option.name }}">{{ option.name }}:</label>
                                    <select id="{{ option.name }}" name="{{ option.name }}">
                                        {% for value in option.values %}
                                            <option value="{{ value.name }}">{{ value.name }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                            {% endfor %}
                        </div>
                    {% endif %}
                    
                    <!-- Quantity Control -->
                    <div class="quantity-control">
                        <label for="quantity">Quantity:</label>
                        <div class="quantity-wrapper">
                            <button class="quantity-btn minus" type="button">-</button>
                            <input type="number" id="quantity" name="quantity" value="1" min="1" readonly>
                            <button class="quantity-btn plus" type="button">+</button>
                        </div>
                    </div>
                </div>

                <div class="flex-box">
                    <button id="addToCart" 
                            onclick="addToCart('{{ product.id }}')"
                            class="add-to-cart-button">
                        Add to Cart
                    </button>
                </div>
            {% endif %}
        </div>
    </div>

    {# ----- Review request form ------- #}
    {# <div class="review-form-section"> #}

    {# </div> #}
    {# ----- End Review Request form ----#}

    {# ----- START: REVIEWS SECTION ----- #}
    <div class="product-reviews-section">
        {# Calculate review statistics #}
        {% set totalReviews = 0 %}
        {% set sumOfScores = 0 %}
        {% set averageRating = 0 %}

        {% if collections.abadaReviews and collections.abadaReviews.length > 0 %}
            {% set totalReviews = collections.abadaReviews.length %}
            {% for review in collections.abadaReviews %}
                {% set sumOfScores = sumOfScores + review.review_score %}
            {% endfor %}
            {% if totalReviews > 0 %}
                {% set averageRating = (sumOfScores / totalReviews) | round(1) %}
            {% endif %}
        {% endif %}

        <div class="product-review-header">
            <h2 class="product-review-header__title">Customer Reviews</h2>
            {% if totalReviews > 0 %}
            <div class="product-review-header__summary">
                <div class="product-review-header__average-stars">
                    {% for i in range(1, 6) %}
                        {% if i <= averageRating %}
                            <span class="star filled">&#9733;</span>
                        {% elif i - 0.5 <= averageRating %}
                            <span class="star half-filled"><span class="star-inner">&#9733;</span>&#9734;</span>
                        {% else %}
                            <span class="star empty">&#9734;</span>
                        {% endif %}
                    {% endfor %}
                </div>
                <span class="review-average">{{ averageRating }} / 5</span>
                <span class="review-count">({{ totalReviews }} review{% if totalReviews != 1 %}s{% endif %})</span>
            </div>
            {% endif %}
        </div>

        {# --- Review Request --- #}
        <button id="toggleReviewFormBtn" class="review-toggle-btn">
            Write a Review
            <span class="arrow-down"></span>
        </button>
        <div id="reviewFormContainer" class="review-form-collapsible">
            <div class="bulk-form-container">
                <form id="reviewForm" class="contact-form" action="YOUR_FORM_ENDPOINT" method="POST">
                    
                    <div class="selectors-container">
                        <div class="form-group">
                            <label for="reviewAuthor">Name</label>
                            <input type="text" id="reviewAuthor" name="author" required>
                        </div>
                        <div class="form-group">
                            <label for="reviewEmail">Email</label>
                            <input type="email" id="reviewEmail" name="email" required>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="reviewUserType">I am a...</label>
                        <select id="reviewUserType" name="user_type" required>
                            <option value="" disabled selected>Select an option</option>
                            <option value="First-time Buyer">First-time Buyer</option>
                            <option value="Returning Customer">Returning Customer</option>
                            <option value="Capoeirista">Capoeirista</option>
                            <option value="Gift Giver">Gift Giver</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Rating</label>
                        <div class="star-rating">
                            <input type="radio" id="rating-5" name="review_score" value="5" required/><label for="rating-5" title="5 stars">â˜…</label>
                            <input type="radio" id="rating-4" name="review_score" value="4" /><label for="rating-4" title="4 stars">â˜…</label>
                            <input type="radio" id="rating-3" name="review_score" value="3" /><label for="rating-3" title="3 stars">â˜…</label>
                            <input type="radio" id="rating-2" name="review_score" value="2" /><label for="rating-2" title="2 stars">â˜…</label>
                            <input type="radio" id="rating-1" name="review_score" value="1" /><label for="rating-1" title="1 star">â˜…</label>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="reviewTitle">Review Title</label>
                        <input type="text" id="reviewTitle" name="review_title" required>
                    </div>

                    <div class="form-group">
                        <label for="reviewContent">Review</label>
                        <textarea id="reviewContent" name="review_content" rows="5" required></textarea>
                    </div>

                    <button type="submit" class="btn btn-very-dark btn-form">Submit Review</button>
                </form>
            </div>
        </div>
        {# --- End Review Request --- #}

        {% if collections.abadaReviews and collections.abadaReviews.length > 0 %}
            <ul class="reviews-list">
                {% for review in collections.abadaReviews %}
                <li class="review-item">
                    <div class="review-item__stars">
                        {% for i in range(1, 6) %} {# Loop 1 to 5 #}
                            {% if i <= review.review_score %}
                                <span class="star filled">&#9733;</span> {# Filled star HTML entity â˜… #}
                            {% else %}
                                <span class="star empty">&#9734;</span> {# Empty star HTML entity â˜† #}
                            {% endif %}
                        {% endfor %}
                    </div>
                    <h3 class="review-item__title">{{ review.review_title }}</h3>
                    <p class="review-item__meta">
                        <span class="review-item__author-name">By: {{ review.author }} - </span>
                        <span class="review-item__author">{{ review.user_type }}</span>
                        {# DATE REMOVED FROM HERE #}
                    </p>
                    <p class="review-item__content">{{ review.review_content }}</p>
                </li>
                {% endfor %}
            </ul>
        {% else %}
            <p class="no-reviews-message">Be the first to review this product!</p>
        {% endif %}
    </div>
    {# ----- END: REVIEWS SECTION ----- #}

</section>

<style>
    .review-form-section {
        grid-column: 1 / -1;
        padding: 4rem 1rem;
        margin-top: 2rem;
        border-top: 1px solid #eee;
        max-width: 800px;
        margin: 2rem auto 0;
    }

    /* .review-toggle-btn {
        width: 100%;
        padding: 1rem 1.5rem;
        font-size: 1.5rem;
        font-weight: 500;
        color: var(--title-color);
        background-color: var(--background-variant);
        border: 1px solid #ccc;
        border-radius: 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        text-align: left;
        transition: background-color 0.3s ease;
    } */

    .review-toggle-btn {
        margin-bottom: 1.5rem;
        font-size: 1.2rem;
        color: var(--title-color);
        display: flex;
        align-items: center;
        justify-self: center;
        gap: 1rem;
        border-bottom: 1.5px solid var(--action-primary);
        padding: 0.5rem;
        border-radius: 4px;
        transition: color 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    }

    .review-toggle-btn:hover {
        color: var(--action-primary);
    }

    .arrow-down {
        border: solid var(--title-color);
        border-width: 0 3px 3px 0;
        display: inline-block;
        padding: 4px;
        transform: rotate(45deg);
        -webkit-transform: rotate(45deg);
        transition: transform 0.3s ease-in-out;
    }

    .review-toggle-btn.active .arrow-down {
        transform: rotate(-135deg);
        -webkit-transform: rotate(-135deg);
    }

    .review-form-collapsible {
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.5s ease-in-out;
    }
    .review-form-collapsible.active {
        max-height: 1000px; /* Adjust as needed, should be larger than the form's height */
    }

    /* Add padding to form container when it's open */
    .review-form-collapsible .bulk-form-container {
        padding-top: 2rem;
    }

    .contact-form .form-group {
        margin-bottom: 1.5rem;
    }
    .contact-form label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 500;
        color: var(--title-color);
    }
    .contact-form input[type="text"],
    .contact-form input[type="email"],
    .contact-form textarea {
        width: 100%;
        padding: 1rem;
        font-family: 'DM Sans', sans-serif;
        font-size: 1rem;
        background-color: #f8f8f8;
        border: none;
        border-radius: 10px;
        color: #000;
        transition: border-color 0.3s ease;
    }
    .contact-form textarea {
        resize: vertical;
        min-height: 120px;
    }
    /* Star Rating CSS */
    .star-rating {
        display: flex;
        flex-direction: row-reverse; /* This is crucial for the hover effect */
        justify-content: flex-end;
        gap: 0.2rem;
    }
    .star-rating input[type="radio"] {
        display: none;
    }
    .star-rating label {
        color: #ccc;
        cursor: pointer;
        font-size: 2.5rem;
        transition: color 0.2s;
        margin-bottom: 0; /* Override default label margin */
        line-height: 1;
    }
    .star-rating label:hover,
    .star-rating label:hover ~ label {
        color: var(--alt-action);
    }
    .star-rating input[type="radio"]:checked ~ label {
        color: var(--alt-action);
    }

    /* Existing Review Display Styles */
    .product-reviews-section {
        grid-column: 1 / -1; /* Make it full width in your main-grid if needed */
        padding: 2rem 0; /* Add some vertical spacing */
        margin-top: 2rem;
        border-top: 1px solid #eee;
        margin: 0 1rem;
    }
    .product-review-header {
        display: flex;
        flex-wrap: wrap; /* Allow wrapping on smaller screens */
        align-items: center;
        justify-content: center;
        gap: 0rem;
        margin-bottom: 1.5rem;
        padding: 0 1rem; /* Add some padding if section isn't full bleed */
    }
    .product-review-header__title {
        font-size: 1.8rem; 
        margin-right: 1rem; 
        margin-bottom: 0.5rem; 
    }
    .product-review-header__summary {
        display: flex;
        align-items: center;
        gap: 0.75rem; 
    }
    .product-review-header__average-stars .star {
        font-size: 1.2rem; 
        color: #ccc; 
    }
    .product-review-header__average-stars .star.filled,
    .product-review-header__average-stars .star.half-filled .star-inner {
        color: var(--action-primary);
    }
    .product-review-header__average-stars .star.half-filled {
        position: relative; 
    }
    .product-review-header__average-stars .star.half-filled .star-inner {
        position: absolute;
        left: 0;
        top: 0;
        width: 50%; 
        overflow: hidden;
        white-space: nowrap;
    }
    .review-average {
        font-size: 1.2rem; 
    }
    .review-count {
        font-weight: 300;
        font-size: 1rem; 
        color: #555;
    }
    .reviews-list {
        padding: 0;
        margin-left: 1rem;
        margin-right: 1rem;
        max-width: 800px;
        margin: 0 auto;
    }
    li {
        list-style: none;
        margin-bottom: 1.5rem;
    }
    .review-item:hover,
    .review-item:focus {
        transform: none !important;
        margin: 0 0 1.5rem 0 !important;
        list-style: none;
    }
    .reviews-item:hover,
    .reviews-item:focus {
        transform: none !important;
        margin: 0 !important;
    }
    .review-item {
        /* background-color: #f9f9f9; */
        border: 1px solid var(--text-form);
        border-radius: 8px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
        border-bottom: 2px solid var(--action-primary);
    }
    .review-item:last-child {
        margin-bottom: 0;
    }
    .review-item__stars {
        margin-bottom: 0.5rem;
        font-size: 1.25rem; 
    }
    .review-item__stars .star.filled {
        color: var(--action-primary);
    }
    .review-item__stars .star.empty {
        color: #ccc; 
    }
    .review-item__title {
        font-size: 1.25rem;
        margin-top: 0;
        margin-bottom: 0.25rem;
        /* color: #333; */
    }
    .review-item__meta {
        font-size: 0.9rem;
        color: #666;
        margin-bottom: 0.75rem;
    }
    .review-item__author {
        font-weight: bold;
    }
    .review-item__content {
        font-size: 1rem;
        line-height: 1.6;
        color: #444;
        margin-bottom: 0;
    }
    .no-reviews-message {
        text-align: center;
        font-style: italic;
        color: #777;
        padding: 2rem;
    }
    @media (min-width: 768px) {
        .product-review-header {
            gap: 2rem;
        }
    }
</style>

<script>
async function addToCart(productId) {
    const quantity = document.getElementById('quantity').value;
    const button = document.getElementById('addToCart');
    const options = {};
    
    document.querySelectorAll('.option-group select').forEach(select => {
        options[select.name] = select.value;
    });

    button.disabled = true;
    button.textContent = 'Adding...';
    
    const cartSidebar = document.getElementById('cart-sidebar');
    const cartOverlay = document.getElementById('cart-overlay');
    if (cartSidebar && cartOverlay) {
        cartSidebar.classList.add('active');
        cartOverlay.classList.add('active');
    }
    
    const cartItems = document.getElementById('cart-items');
    if (cartItems) {
        cartItems.classList.add('loading');
    }
    
    try {
        if (window.swellCartCount === undefined) {
            window.swellCartCount = 0;
        }
        window.swellCartCount += parseInt(quantity);
        updateCartCount();
        
        await swell.cachedCart.addItem({
            product_id: productId,
            quantity: parseInt(quantity),
            options: options
        });

        button.textContent = 'Added to Cart!';
        
        const updateCartDisplayFn = window.updateCartDisplay;
        if (typeof updateCartDisplayFn === 'function') {
            updateCartDisplayFn();
        }
        
        setTimeout(() => {
            button.disabled = false;
            button.textContent = 'Add to Cart';
        }, 1500);

    } catch (error) {
        console.error('Add to cart error:', error);
        button.disabled = false;
        button.textContent = 'Add to Cart'; 
        alert('Error adding to cart: ' + error.message);
        
        if (cartItems) {
            cartItems.classList.remove('loading');
        }
        
        const cart = await swell.cachedCart.get();
        window.swellCartCount = cart?.itemQuantity || 0;
        updateCartCount();
    }
}

const productImages = JSON.parse('{{ product.images | dump | safe }}');

function swapImages(thumbnailElement) {
    const mainImage = document.getElementById('mainImage');
    const thumbnails = document.querySelectorAll('.thumbnail-image');
    
    thumbnails.forEach(thumb => thumb.classList.remove('active'));
    thumbnailElement.classList.add('active');

    const thumbnailIndex = parseInt(thumbnailElement.dataset.index);
    
    mainImage.style.opacity = '0';
    
    setTimeout(() => {
        mainImage.src = productImages[thumbnailIndex].file.url;
        mainImage.alt = productImages[thumbnailIndex].alt;
        mainImage.dataset.index = thumbnailIndex;
        mainImage.style.opacity = '1';
    }, 300);
}

document.addEventListener('DOMContentLoaded', () => {
    // Image thumbnail handler
    const firstThumbnail = document.querySelector('.thumbnail-image');
    if (firstThumbnail) {
        firstThumbnail.classList.add('active');
    }

    // Review form toggle handler
    const toggleBtn = document.getElementById('toggleReviewFormBtn');
    const formContainer = document.getElementById('reviewFormContainer');

    if (toggleBtn && formContainer) {
        toggleBtn.addEventListener('click', () => {
            toggleBtn.classList.toggle('active');
            formContainer.classList.toggle('active');
        });
    }
});

</script>
{% endblock %}
