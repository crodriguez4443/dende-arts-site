---
layout: layout.njk 
title: "Capoeira Songbook with translation and video"
pagination: 
    data: collections.songs
    size: 60
    alias: paginatedPosts
    addAllPagesToCollections: true 
permalink: "songbook/{% if pagination.pageNumber > 0 %}page-{{ pagination.pageNumber + 1 }}/{% endif %}index.html"
---

<div class="blog-page-container main-grid">
    {% include "nav.njk" %}
    <div class="" style="padding-top:2rem">
        <h1>Learn Capoeira music with translations and video</h1>
        <!-- Add search bar -->
    <div class="search-container">
        <input class="searchInput" type="text" id="songsSearchInput" placeholder="Search Songs...">
    </div>
    
    <!-- FILTER BY TAGS -->
    {# <div class="filter-section">
        <h3>Filter</h3>
        <div class="category-buttons">
            <button class="btn btn-blue active" data-tag="all">All Tags</button>
            {% set filterTags = ["beginner", "intermediate", "advanced", "quadra", "corrido", "ladainha"] %}
            {% for tag in filterTags %}
                <button class="btn btn-blue" data-tag="{{ tag }}">{{ tag | title }}</button>
            {% endfor %}
        </div>
    </div> #}

    <!-- Improved FILTER by tag 2 -->
    <div class="">
        <div class="category-buttons">
            <button class="tag active" data-tag="all">All Songs</button>
            {% set filterTags = ['beginner', 'intermediate', 'advanced'] %}
            {% for tag in filterTags %}
                <button class="tag" data-tag="{{ tag }}">{{ tag | title }}</button>
            {% endfor %}
        </div>
    </div>

    <div class="song-grid" id="songs-grid">
        {% for song in paginatedPosts %}
            <a href="/songbook/{{ song.slug }}/" class="song-card" 
            data-tags="{% if song.data.tags %}{{ song.data.tags | join(',') }}{% endif %}">
                <h3 class="song-title">{{ song.data.title }}</h3>
                <p class="song-excerpt">{{ song.data.excerpt }}</p>
                <div class="tags">
                    {% if song.data.tags %}
                        {% for tag in song.data.tags %}
                            <p class="tag">{{tag}}</p>
                        {% endfor %}
                    {% endif %}
                </div>
            </a>
        {% endfor %}
    </div>
  

    {# Pagination Navigation #}
    <nav class="pagination" aria-label="Pagination">
        {% if pagination.href.previous %}
            <a href="{{ pagination.href.previous }}" class="pagination-link">Previous</a>
        {% endif %}

        {% for page in pagination.pages %}
            {% set pageNumber = loop.index %}
            {% if pageNumber === pagination.pageNumber + 1 %}
                <span class="pagination-link current">{{ pageNumber }}</span>
            {% else %}
                <a href="{% if loop.index0 == 0 %}/songbook/{% else %}/songbook/page-{{ pageNumber }}/{% endif %}" 
                class="pagination-link">
                    {{ pageNumber }}
                </a>
            {% endif %}
        {% endfor %}

        {% if pagination.href.next %}
            <a href="{{ pagination.href.next }}" class="pagination-link">Next</a>
        {% endif %}
    </nav>

</div>

<style>
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        background-color: #f5f5f5;
    }
    
    .container {
        max-width: 1200px;
        margin: 0 auto;
    }
    
    h1 {
        text-align: center;
        color: #333;
        margin-bottom: 30px;
    }
    
    .song-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 15px;
        padding: 20px 0;
    }
    
    .song-card {
        display: block;
        background: white;
        border-radius: 8px;
        padding: 15px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        cursor: pointer;
        text-decoration: none;
        color: inherit;
    }
    
    .song-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }
    
    .song-title {
        font-size: 16px;
        font-weight: 600;
        color: #333;
        margin: 0;
        line-height: 1.3;
    }
    
    .song-count {
        text-align: center;
        margin-bottom: 20px;
        color: #666;
        font-size: 18px;
    }
    
    .song-excerpt {
        font-size: 14px;
        color: #666;
        margin: 10px 0 0 0;
        font-style: italic;
    }

    /* Custom styles for category filters (minimal additions) */
    .filter-section {
        margin-bottom: 2rem;
        padding: 1.5rem;
        background-color: var(--background-variant);
        border-radius: 8px;
    }

    .filter-section h3 {
        margin-top: 0;
        font-size: 1.2rem;
        margin-bottom: 1rem;
    }

    /* Option A: Button filter styles */
    .category-buttons {
        display: flex;
        flex-wrap: wrap;
        gap: 0.75rem;
        justify-content: center;
    }

    .category-buttons .btn {
        padding: 0.75rem 1.5rem;
        font-size: 0.9rem;
        margin: 0;
    }

    .category-buttons .btn.active {
        background-color: var(--action-primary);
        color: white;
    }

    /* Styling for the second filter section (.tag buttons) */
    .category-buttons .tag {
        padding: 0.75rem 1.5rem;
        font-size: 0.9rem;
        margin: 0;
        background-color: #f0f0f0;
        border: 1px solid #ddd;
        border-radius: 4px;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-block;
    }

    .category-buttons .tag:hover {
        background-color: #e0e0e0;
        border-color: #ccc;
    }

    .category-buttons .tag.active {
        background-color: var(--action-primary, #007bff);
        color: white;
        border-color: var(--action-primary, #007bff);
    }

    @media (max-width: 768px) {
        .category-buttons {
            justify-content: center;
        }
        
        .category-dropdown {
            width: 100%;
        }
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Select both filter button types
    const allFilterButtons = document.querySelectorAll('.category-buttons .btn, .category-buttons .tag');
    const songCards = document.querySelectorAll('.song-card');
    
    // Function to filter songs by tag
    function filterSongs(tag) {
        songCards.forEach(card => {
            if (tag === 'all') {
                card.style.display = 'block';
            } else {
                // Get the tags for this song
                const songTags = card.getAttribute('data-tags');
                
                // Check if this song has the selected tag
                if (songTags && songTags.includes(tag)) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            }
        });
    }
    
    // Button filter functionality for both filter sections
    allFilterButtons.forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            
            // Remove active class from ALL filter buttons
            allFilterButtons.forEach(btn => btn.classList.remove('active'));
            
            // Add active class to clicked button
            this.classList.add('active');
            
            // Filter songs
            const tag = this.getAttribute('data-tag');
            filterSongs(tag);
        });
    });
});
</script>