<!DOCTYPE html> 
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="descritpion" content="{{ description | escape }}">
    <title>{{ title }}</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="/css/contact.css">
    <link rel="stylesheet" href="/css/pages.css"> 

    <!-- OG meta descriptions -->
    <meta property="og:title" content="{{ title | escape }}" />
    <meta property="og:description" content="{{ description | escape }}" />
    <meta property="og:image" content="{{ socialImage | default('/img/dende-arts-logo2.png') }}" />

    <!-- Primary font -->
    <link 
        rel="preload" 
        href="/fonts/DMSans-Variable.woff2" 
        as="font" 
        type="font/woff2" 
        crossorigin
    >

    <!-- Load Flavicon -->
    <link rel="icon" type="img" href="/img/dende-arts-logo.png">

</head>
<body>
    {% include "cart-sidebar.njk" %}
    <main> 
        {{ content | safe }}
    </main>
    <footer class="footer main-grid">
        <div class="footer-top-content">
        <!-- Logo/Title Section -->
            <div class="footer-logo-link-container">
                <a href="/">
                    {% image "src/img/dende-logo-white.png", "dende arts logo", "footer-logo-link-lg", undefined, undefined, undefined, "eager" %}
                </a>
            </div>
            <!-- Social Media Icons -->
            <div class="footer-social-large"> 
                <a href="https://www.instagram.com/dende_arts/" target="_blank" class="social-icon">
                    {% image "src/img/homepage/instagram-icon-white.png", "instagram logo", "instagram-logo", undefined, undefined, undefined %}
                </a>
                <a href="https://https://www.youtube.com/@Dendearts/videos" target="_blank" class="social-icon">
                    {% image "src/img/homepage/youtube-icon-white.png", "youtube logo", "youtube-logo", undefined, undefined, undefined %}
                </a>
                
            </div>
        </div>
        <div class="footer-bottom-content">

            <!-- Navigation Links -->
            <nav class="footer-nav">
                <a href="/">Home</a>
                {# <a href="/">About</a> #}
                <a href="/abada-joggers-landing/">Abadas</a>
                <a href="/songbook/">Songbook</a>
                {# <a href="/">Learn</a> #}
                <a href="/blog/">Blog</a>
                <a href="/bulk-orders/">Bulk Orders</a>
            </nav>

            <!-- Social Media Icons -->
            <div class="footer-social-small">
                <a href="https://www.instagram.com/dende_arts/" target="_blank" class="social-icon">
                    {% image "src/img/homepage/instagram-icon-white.png", "instagram logo", "instagram-logo", undefined, undefined, undefined %}
                </a>
                <a href="https://https://www.youtube.com/@Dendearts/videos" target="_blank" class="social-icon">
                    {% image "src/img/homepage/youtube-icon-white.png", "youtube logo", "youtube-logo", undefined, undefined, undefined %}
                </a>  
            </div>
    
            <!-- Copyright -->
            <div class="footer-copyright">
                <p>Copyright Â© <span id="current-year"></span> Solstice Web Studio LLC | All Rights Reserved</p>
            </div>
        </div>
    </footer>

    <script src="/js/nav.js" defer></script>
    <!-- script to update copyright year -->
    <script>document.getElementById('current-year').textContent = new Date().getFullYear();</script>
    <script src="https://unpkg.com/lunr/lunr.js" defer></script>
    <script src="/js/search.js" defer></script>
    <script src="/js/product-quantity.js" defer></script>
    
    <!-- Add our new cart utils -->
    <script src="/js/cart-utils.js" defer></script>
    <script src="/js/cart-display.js" defer></script>

    <!-- Load Swell SDK with defer to not block rendering -->
    <script src="https://cdn.jsdelivr.net/npm/swell-js@4.2.5/dist/swell.umd.min.js" defer></script>

    <!-- Initialize Swell after page loads -->
     <script defer>
         window.swellCartCount = 0; // Initialize global cart count
         window.swellInitialized = false; // Flag to track initialization
 
         // Define the function for global access
         window.initializeSwell = async function() {
             if (window.swellInitialized) {
                 console.log("Swell already initialized");
                 return swell; 
             }
 
             try {
                 // Initialize with improved options
                 await swell.init('dendearts', 'pk_kWLyA4guBdwbH1pwBV32Dp7smCsqlIgK', {
                     useCamelCase: true,
                     persist: 'localstorage',
                     cache: true,           // Enable caching
                     timeout: 5000          // Reasonable timeout
                 });
                 console.log('Swell initialized successfully');
                 window.swellInitialized = true;
                 
                 // Set up the cached cart system after Swell is initialized
                 setupCachedCart();
                 
                 // Get the cart and update the global variable
                 const cart = await swell.cachedCart.get();
                 window.swellCartCount = cart?.itemQuantity || 0;
                 updateCartCount();
                 
                 return swell;
             } catch (error) {
                 console.error('Swell initialization error:', error);
                 return null;
             }
         };
         
         // Wait for window load to ensure this runs after all critical rendering
         window.addEventListener('load', function() {
             window.initializeSwell();
         });
         
         // Setup the cached cart system
         function setupCachedCart() {
             swell.cachedCart = {
                 data: null,
                 lastFetched: 0,
                 ttl: 60000, // 1 minute TTL
                 
                 async get() {
                     const now = Date.now();
                     if (!this.data || now - this.lastFetched > this.ttl) {
                         this.data = await swell.cart.get();
                         this.lastFetched = now;
                     }
                     return this.data;
                 },
                 
                 async updateItem(id, data) {
                     // Try to update local cache optimistically
                     if (this.data && this.data.items) {
                         const itemIndex = this.data.items.findIndex(item => item.id === id);
                         if (itemIndex >= 0) {
                             // Apply the update to our local cache
                             const updatedItem = { ...this.data.items[itemIndex], ...data };
                             this.data.items[itemIndex] = updatedItem;
                             
                             // Recalculate totals if quantity changed
                             if (data.quantity) {
                                 let itemQuantity = 0;
                                 this.data.items.forEach(item => {
                                     itemQuantity += item.quantity;
                                 });
                                 this.data.itemQuantity = itemQuantity;
                             }
                         }
                     }
                     
                     // Perform the actual API call
                     const result = await swell.cart.updateItem(id, data);
                     this.data = result;
                     this.lastFetched = Date.now();
                     return result;
                 },
                 
                 async removeItem(id) {
                     // Try to update local cache optimistically
                     if (this.data && this.data.items) {
                         const itemIndex = this.data.items.findIndex(item => item.id === id);
                         if (itemIndex >= 0) {
                             // Remove the item from our local array
                             const removedItem = this.data.items[itemIndex];
                             this.data.items.splice(itemIndex, 1);
                             
                             // Update the item count
                             this.data.itemQuantity -= removedItem.quantity;
                         }
                     }
                     
                     // Perform the actual API call
                     const result = await swell.cart.removeItem(id);
                     this.data = result;
                     this.lastFetched = Date.now();
                     return result;
                 },
                 
                 async addItem(data) {
                     const result = await swell.cart.addItem(data);
                     this.data = result;
                     this.lastFetched = Date.now();
                     return result;
                 }
             };
         }
     </script>
    
</body>
</html>